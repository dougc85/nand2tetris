// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way (in=load, sel=address[0..1],  a=aa, b=bb, c=cc, d=dd);
    RAM4K (in=in, load=aa, address=address[2..13], out=aaa);
    RAM4K (in=in, load=bb, address=address[2..13], out=bbb);
    RAM4K (in=in, load=cc, address=address[2..13], out=ccc);
    RAM4K (in=in, load=dd, address=address[2..13], out=ddd);
    Mux4Way16 (a=aaa, b=bbb, c=ccc, d=ddd, sel=address[0..1], out=out);
}